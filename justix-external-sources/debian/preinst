#!/bin/bash
# preinst script for sample-package
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


declare -A keys

keys[0, name]="MongoDB"
keys[0, url]="https://www.mongodb.org/static/pgp/server-5.0.asc"
keys[0, tmpfile]="mongodb.gpg";

keys[1, name]="VSCode";
keys[1, url]="https://packages.microsoft.com/keys/microsoft.asc";
keys[1, tmpfile]="microsoft.gpg";

keys[2, name]="Google Chrome";
keys[2, url]="https://dl-ssl.google.com/linux/linux_signing_key.pub";
keys[2, tmpfile]="google.gpg";

keys[3, name]="Oracle Virtualbox";
keys[3, url]="https://www.virtualbox.org/download/oracle_vbox_2016.asc";
keys[3, tmpfile]="oracle.gpg";

keys[4, name]="Docker";
keys[4, url]="https://download.docker.com/linux/ubuntu/gpg";
keys[4, tmpfile]="docker.gpg";

keys[5, name]="Xenlism";
keys[5, url]="https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x067FB4A0B6D9380A";
keys[5, tmpfile]="xenlism.gpg";

#keys[6, name]="Gimp Stable";
#keys[6, url]="https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xFB97E9C3A97F85C095AEA7903BDAAC08614C4B38";
#keys[6, tmpfile]="gimp.gpg";

keys[7, name]="Gradle";
keys[7, url]="https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3D16156328D0E3056D885D0BD7CC6F019D06AF36";
keys[7, tmpfile]="gradle.gpg";

keys[8, name]="Ubuntu Make";
keys[8, url]="https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2A8F89B722D1D6630348601343FDBC385ADA701F";
keys[8, tmpfile]="umake.gpg";

keys[6, name]="MySQL";
keys[6, url]="https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x8C718D3B5072E1F5";
keys[6, tmpfile]="mysql.gpg";

case "$1" in
    install|upgrade)

    gpgconf --kill dirmngr

    # Adding keys for sources

    for i in `seq 0  $(( ${#keys[@]}/3 -1 ))`; 
    do
        #echo "${keys[$i, url]} ${keys[$i, name]} ${keys[$i, tmpfile]}";
        echo -e "\e[1m\e[93m [Justix] \e[95m Downloading ${keys[$i, name]} keys... \e[0m"
        curl "${keys[$i, url]}" | gpg --dearmor > /tmp/${keys[$i, tmpfile]}

        if [ -f /etc/apt/trusted.gpg.d/${keys[$i, tmpfile]} ] && [ ! `diff /tmp/${keys[$i, tmpfile]} /etc/apt/trusted.gpg.d/${keys[$i, tmpfile]}` ] 2>/dev/null;
            then echo -e "Key already installed..." 
        else 
            #echo "Afiscg la clau" 
            install -o root -g root -m 644 tmp/${keys[$i, tmpfile]} /etc/apt/trusted.gpg.d/
        fi 

    done
   
      

    # [ -d ~/.gnupg ] && chown -R $USER:$USER ~/.gnupg
    ;;


    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
